{"version":3,"sources":["page.js"],"names":["define","langx","spa","router","Deferred","Page","Evented","inherit","klassName","init","config","plugins","this","_plugins","params","_config","mixin","each","pluginName","setting","Plugin","routes","_router","routeViewer","page","baseUrl","_params","_rvc","document","querySelector","on","proxy","title","undefined","URL","baseURI","pathname","homePath","getConfig","key","go","path","force","refresh","curCtx","current","content","previous","route","render","isString","innerHTML","appendChild","trigger","createEvent","prepare","self","promises0","_prepared","resolve","map","plugin","name","isHooked","all","then","promises1","lazy","promises2","concat","run","start"],"mappings":"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","file":"../page.js","sourcesContent":["define([\r\n    \"skylark-langx/langx\",\r\n    \"./spa\",\r\n    \"./router\"\r\n], function(langx, spa,router) {\r\n    var Deferred = langx.Deferred;\r\n\r\n    var Page = langx.Evented.inherit({\r\n        klassName: \"SpaPage\",\r\n\r\n        init: function(config) {\r\n\r\n            var plugins = this._plugins = {};\r\n\r\n            config = this._config = langx.mixin({\r\n                plugins: {}\r\n            }, config, true);\r\n\r\n            langx.each(config.plugins, function(pluginName, setting) {\r\n                plugins[pluginName] = new spa.Plugin(pluginName, setting);\r\n            });\r\n\r\n            router.routes(config.routes);\r\n\r\n            this._router = router;\r\n\r\n            ///this._page = new spa.Page(config.page);\r\n            var params = langx.mixin({\r\n                \"routeViewer\": \"body\"\r\n            }, config.page);\r\n\r\n            this._params = params;\r\n            this._rvc = document.querySelector(params.routeViewer);\r\n            router.on(\"routed\", langx.proxy(this, \"refresh\"));\r\n\r\n            document.title = config.title;\r\n            var baseUrl = config.baseUrl;\r\n            if (baseUrl === undefined) {\r\n                baseUrl = config.baseUrl = (new langx.URL(document.baseURI)).pathname;\r\n            }\r\n            router.baseUrl(baseUrl);\r\n\r\n            if (config.homePath) {\r\n                router.homePath(config.homePath);\r\n            }\r\n\r\n\r\n        },\r\n\r\n        baseUrl : function() {\r\n            return router.baseUrl();\r\n        },\r\n\r\n        getConfig: function(key) {\r\n            return key ? this._config[key] : this._config;\r\n        },\r\n\r\n        go: function(path, force) {\r\n            router.go(path, force);\r\n            return this;\r\n        },\r\n\r\n\r\n        //Refreshes the route\r\n        refresh: function() {\r\n            var curCtx = router.current(),\r\n                prevCtx = router.previous();\r\n            var content = curCtx.route.render(curCtx);\r\n            if (content===undefined || content===null) {\r\n                return;\r\n            }\r\n            if (langx.isString(content)) {\r\n                this._rvc.innerHTML = content;\r\n            } else {\r\n                this._rvc.innerHTML = \"\";\r\n                this._rvc.appendChild(content);\r\n            }\r\n            curCtx.route.trigger(langx.createEvent(\"rendered\", {\r\n                route: curCtx.route,\r\n                content: content\r\n            }));\r\n        },\r\n\r\n        prepare: function() {\r\n\r\n            if (this._prepared) {\r\n                return Deferred.resolve();\r\n            }\r\n            var self = this;\r\n\r\n            var promises0 = langx.map(this._plugins, function(plugin, name) {\r\n                if (plugin.isHooked(\"starting\")) {\r\n                    return plugin.prepare();\r\n                }\r\n            });\r\n\r\n            return Deferred.all(promises0).then(function() {\r\n                router.trigger(langx.createEvent(\"starting\", {\r\n                    spa: self\r\n                }));\r\n                var promises1 = langx.map(router.routes(), function(route, name) {\r\n                        if (route.lazy === false) {\r\n                            return route.prepare();\r\n                        }\r\n                    }),\r\n                    promises2 = langx.map(self._plugins, function(plugin, name) {\r\n                        if (!plugin.isHooked(\"starting\")) {\r\n                            return plugin.prepare();\r\n                        }\r\n                    });\r\n\r\n\r\n                return Deferred.all(promises1.concat(promises2)).then(function() {\r\n                    self._prepared = true;\r\n                });\r\n            });\r\n        },\r\n\r\n        run: function() {\r\n            this._router.start();\r\n            router.trigger(langx.createEvent(\"started\", {\r\n                spa: this\r\n            }));\r\n        }\r\n    });\r\n\r\n    return spa.Page = Page;\r\n});\r\n"]}